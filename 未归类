__builtin_popcount()
32位无符号整数中1的个数
//
bitset<1000> a[1010];
1010行1000列的位图

vector<pair<int,int>> p{50010,{0,0}};  //格式


set
对set的访问
for(set<long long>::iterator it = s.begin(); it!=s.end();it++){
         res.push_back((*it));
}
    查找
    s.find(x)==s.end()
    
//构造函数
function<int(int, int)> dfs = [&](int x, int fa)

function<返回类型（参数1类型，参数2类型）> 函数名 = [&](参数一，参数二)

复制数组
int great[4000][4001];
 memcpy(great[k], great[k + 1], sizeof(great[k + 1]));

//取power中最小数
*min_element(power, power + n) 

//放在class前会先默认执行，并作为全局变量
int ini =[](){
    pri[0]=0;
	for(int i=2;i<_;i++){
		if(nonpri[i]) continue;
		pri[cnt++]=i;
		for(int j=i*i;j<_;j+=i){
			nonpri[j]=1;
		}
	}
    return 0;
}();
// 除基取余适用于负数 LC1017
