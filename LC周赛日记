8.21
第四题：https://leetcode.cn/problems/find-the-k-sum-of-an-array/
第k小序列，可以用堆递归地实现
        priority_queue<pair<long long,int>> pq;
        pq.emplace(sum,0);
        while(--k){
            auto [x,i]=pq.top();pq.pop();
            if(i<n){
                pq.emplace(x-nums[i],i+1);
                if(i) pq.emplace(x+nums[i-1]-nums[i],i+1);
            }
        }

3.5
双周赛：
换根DP不会，新题，在基本树形确定的情况下，换相邻根时只改变了这条边
周赛：的T3,T4都不会，T4是分组背包，收获是遇事不决二维数组，
T3是类似跳跃游戏，加深了对数快速分解的印象
统计单质数的最左最右位置，则他们一定是不能分开的。然后可以得到x个区间，将这些区间合并，如果合并后只有一个区间，则不成立，反之输出第一个区间的右端点

3.12
26MIN AK,因为Int溢出WA了一发，T4反应慢了，按结束时间排序是一惯用手法，
全球192，加分

3.19
双周赛过于简单，T1漏了特殊情况返回WA一发，T3想错了pq<pii>的默认顺序WA一发，T4读错题后没全盘改，溢出WA一发（没加1ll*）,超时WA一发

4.16 
双周赛 T4 对Floyd的理解不够，现已加深，T1没考虑特殊情况0
周赛 LC2646 遍历考虑自底向上，因为只有一个顶

5.28 347周赛
做的很垃圾的一场，T3思绪严重超时，T4不知道怎么不TLE
需要复习：
CF 1796D（并没看懂t的三种状态是怎么对应的区段）
	习得：
        ios::sync_with_stdio(false); cin.tie(0); //使得cin和scanf输入一样快
        using li =long long;
        const li INF = 1e18;
        
1789D（良好状态下独立做出来了，但是时间过长，2H）
1799D1
没不清楚的一道DP，最终看题解逐渐理解了，但是D2还需要性能的提升
1799D2需要复习
